const uint8_t digit_map[]   = { 10, 12, 13, 14, 16, 8, 11, 35, 38, 37, 40, 39,  };
const uint8_t digit_map_r[]   = { 39, 40, 37, 38, 35, 11, 8, 16, 14, 13, 12, 10,  };

#define NUM_OF_DIGITS	12
const uint32_t segment_maskA = 0x002682fe;
const uint32_t segment_maskB = 0x00000016;
const uint32_t all_maskA = 0x0027fffe;
const uint32_t all_maskB = 0x000001fe;
const uint32_t spin_maskA[] = {
0x00020000, 0x00220000, 0x00220002, 0x0022000a, 
0x0022000e, 0x0026000e, 0x0026002e, 0x0026003e, 
0x0026003e, 0x0026003e, 0x0026003e, 0x0026023e, 
0x0026027e, 0x002602fe, 0x002682fe, };
const uint32_t spin_maskB[] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000004, 0x00000006, 0x00000016, 0x00000016, 
0x00000016, 0x00000016, 0x00000016, };
const uint32_t asciiA[] = {
0x0000003e, 0x00000030, 0x00000038, 0x00020038, 0x14260030, 0x0202007a, 0x020002b0, 0x02000238, 
0x00000280, 0x02000232, 0x00000040, 0x02000200, 0x100000a0, 0x00000038, 0x04000210, 0x00220050, 
0x00260030, 0x02000040, 0x02200042, 0x02240046, 0x14000280, 0x0402021a, 0x02000030, 0x02000038, 
0x02020038, 0x14020280, 0x00000040, 0x02000200, 0x100000a0, 0x00000038, 0x04000210, 0x00220050, 
0x00000000, 0x00200002, 0x02200000, 0x0220007a, 0x0206007a, 0x160402f2, 0x060200ac, 0x02000000, 
0x10000080, 0x04000200, 0x160002f0, 0x02000070, 0x00000200, 0x00000030, 0x00000040, 0x10000200, 
0x1026020e, 0x10200002, 0x0022003c, 0x0022001a, 0x00240032, 0x000600a8, 0x0006003e, 0x00220002, 
0x0026003e, 0x0026003a, 0x00000040, 0x02000200, 0x100000a0, 0x00000038, 0x04000210, 0x00220050, 
0x0226001c, 0x00260036, 0x0222005a, 0x0006000c, 0x0222004a, 0x0006002c, 0x00060024, 0x0006001e, 
0x00240036, 0x02020048, 0x0020000e, 0x100400a4, 0x0004000c, 0x14240006, 0x04240086, 0x0026000e, 
0x00260034, 0x0026008e, 0x002600b4, 0x0006003a, 0x02020040, 0x0024000e, 0x10040204, 0x00240286, 
0x14000280, 0x0024003a, 0x10020208, 0x0006000c, 0x04000080, 0x0022000a, 0x00000280, 0x00000008, 
0x04000000, 0x0000006c, 0x000400ac, 0x0000003c, 0x0020021a, 0x0000022c, 0x10000070, 0x1020001a, 
0x00040064, 0x00000040, 0x02000204, 0x120000c0, 0x00040004, 0x00000076, 0x00000064, 0x0000003e, 
0x04040024, 0x10200012, 0x00000024, 0x00000098, 0x0004002c, 0x0000000e, 0x00000204, 0x00000286, 
0x14000280, 0x0220001a, 0x00000228, 0x04020228, 0x02000040, 0x10020098, 0x10000230, 0x00000000, 
0x00000000, 0x00000030, 0x00000038, 0x00020038, 0x14260030, 0x0202007a, 0x020002b0, 0x10000238, 
0x00000280, 0x02000232, 0x00000040, 0x02000200, 0x100000a0, 0x00000038, 0x04000210, 0x00220050, 
0x00260030, 0x02000040, 0x02200042, 0x02240046, 0x14000280, 0x1006023a, 0x02000048, 0x02000038, 
0x02020038, 0x14020280, 0x00000040, 0x02000200, 0x100000a0, 0x00000038, 0x04000210, 0x00220050, 
0x00000000, 0x00200002, 0x02200000, 0x0220007a, 0x0206007a, 0x160402f2, 0x060200ac, 0x02000000, 
0x10000080, 0x04000200, 0x160002f0, 0x02000070, 0x00000200, 0x00000030, 0x00000040, 0x10000200, 
0x0026002e, 0x02000048, 0x00220038, 0x0022002a, 0x00240032, 0x0002003a, 0x0002003e, 0x00220002, 
0x0026003e, 0x00260038, 0x02000040, 0x02000200, 0x100000a0, 0x00000038, 0x04000210, 0x00220050, 
0x0226001c, 0x100400a4, 0x0006001c, 0x02240002, 0x10020220, 0x10240216, 0x1200006c, 0x10060020, 
0x00020028, 0x10200002, 0x1020002a, 0x00220030, 0x00200082, 0x00000218, 0x00000284, 0x00000298, 
0x0000002e, 0x0026000c, 0x10020200, 0x0420008a, 0x16000000, 0x1024000e, 0x14000040, 0x00260030, 
0x00000288, 0x06000082, 0x0000021a, 0x0006000c, 0x04000080, 0x0022000a, 0x00000280, 0x00000008, 
0x04000000, 0x100400a4, 0x0006001c, 0x02240002, 0x10020220, 0x10240216, 0x1200006c, 0x10060020, 
0x00020028, 0x10200002, 0x1020002a, 0x00220030, 0x00200082, 0x00000218, 0x00000284, 0x00000298, 
0x0000002e, 0x0026000c, 0x10020200, 0x0420008a, 0x16000000, 0x1024000e, 0x14000040, 0x00260030, 
0x00000288, 0x06000082, 0x0000021a, 0x04020228, 0x02000040, 0x10020098, 0x10000230, 0x00000000, 
};

const uint32_t asciiB[] = {
0x00260030, 0x00000030, 0x00020030, 0x00020038, 0x000002be, 0x02060078, 0x14000070, 0x10020070, 
0x14000000, 0x10040070, 0x02000000, 0x10000040, 0x04000210, 0x00020030, 0x100000a0, 0x0200002c, 
0x0000003e, 0x02000040, 0x02040044, 0x02240046, 0x14000280, 0x100600a8, 0x00000070, 0x00020070, 
0x00020078, 0x14000288, 0x02000000, 0x10000040, 0x04000210, 0x00020030, 0x100000a0, 0x0200002c, 
0x00000000, 0x00040004, 0x00000044, 0x02060074, 0x0206007a, 0x160402f2, 0x042200d8, 0x00000040, 
0x04000200, 0x10000080, 0x160002f0, 0x02000070, 0x10000000, 0x00000030, 0x02000000, 0x10000200, 
0x1026020e, 0x00040204, 0x0022003c, 0x0006002c, 0x00040036, 0x0402001a, 0x0026003a, 0x0004000c, 
0x0026003e, 0x0006003e, 0x02000000, 0x10000040, 0x04000210, 0x00020030, 0x100000a0, 0x0200002c, 
0x0022006e, 0x0024003e, 0x0206006c, 0x0022000a, 0x0206004c, 0x0022001a, 0x0020001a, 0x0026002a, 
0x00240036, 0x02020048, 0x00260004, 0x04200212, 0x00220002, 0x00240286, 0x04240086, 0x0026000e, 
0x0020003e, 0x0426000e, 0x0420003e, 0x0006003a, 0x02000048, 0x00260006, 0x10200202, 0x14240006, 
0x14000280, 0x00060036, 0x10020208, 0x0022000a, 0x04000080, 0x0006000c, 0x14000000, 0x00020000, 
0x00000080, 0x02220010, 0x04220012, 0x00220030, 0x10060024, 0x10220010, 0x02000230, 0x00060224, 
0x02200012, 0x02000000, 0x10200040, 0x06000240, 0x00200002, 0x02240030, 0x02200010, 0x00260030, 
0x00200092, 0x00040224, 0x00200010, 0x04020020, 0x00220012, 0x00260000, 0x10200000, 0x14240000, 
0x14000280, 0x00060064, 0x10020010, 0x10020098, 0x02000040, 0x04020228, 0x10000230, 0x00000000, 
0x00000000, 0x00000030, 0x00020030, 0x00020038, 0x000002be, 0x02060078, 0x14000070, 0x10020230, 
0x14000000, 0x10040070, 0x02000000, 0x10000040, 0x04000210, 0x00020030, 0x100000a0, 0x0200002c, 
0x0000003e, 0x02000040, 0x02040044, 0x02240046, 0x14000280, 0x1006023a, 0x02020040, 0x00020070, 
0x00020078, 0x14000288, 0x02000000, 0x10000040, 0x04000210, 0x00020030, 0x100000a0, 0x0200002c, 
0x00000000, 0x00040004, 0x00000044, 0x02060074, 0x0206007a, 0x160402f2, 0x042200d8, 0x00000040, 
0x04000200, 0x10000080, 0x160002f0, 0x02000070, 0x10000000, 0x00000030, 0x02000000, 0x10000200, 
0x0026001e, 0x02020040, 0x0002003c, 0x0006001c, 0x00040036, 0x00060038, 0x00260038, 0x0004000c, 
0x0026003e, 0x0002003e, 0x02000040, 0x10000040, 0x04000210, 0x00020030, 0x100000a0, 0x0200002c, 
0x0022006e, 0x04200212, 0x0022002a, 0x00040046, 0x10000218, 0x10240226, 0x02220250, 0x0000021a, 
0x00020018, 0x00040204, 0x00060214, 0x0000003c, 0x04040004, 0x10020020, 0x14200000, 0x14020020, 
0x00260010, 0x0022000e, 0x10000208, 0x04060084, 0x000002c0, 0x00260206, 0x02000280, 0x0000003e, 
0x14020000, 0x040400c0, 0x10060020, 0x0022000a, 0x04000080, 0x0006000c, 0x14000000, 0x00020000, 
0x00000080, 0x04200212, 0x0022002a, 0x00040046, 0x10000218, 0x10240226, 0x02220250, 0x0000021a, 
0x00020018, 0x00040204, 0x00060214, 0x0000003c, 0x04040004, 0x10020020, 0x14200000, 0x14020020, 
0x00260010, 0x0022000e, 0x10000208, 0x04060084, 0x000002c0, 0x00260206, 0x02000280, 0x0000003e, 
0x14020000, 0x040400c0, 0x10060020, 0x10020098, 0x02000040, 0x04020228, 0x10000230, 0x00000000, 
};

const uint8_t asciiOnOff[] = {
0x05, 0x02, 0x03, 0x04, 0x07, 0x07, 0x05, 0x05, 
0x02, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x05, 0x02, 0x04, 0x06, 0x04, 0x06, 0x03, 0x04, 
0x05, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x00, 0x02, 0x02, 0x07, 0x08, 0x0a, 0x07, 0x01, 
0x02, 0x02, 0x08, 0x04, 0x01, 0x02, 0x01, 0x02, 
0x08, 0x03, 0x06, 0x05, 0x05, 0x05, 0x07, 0x03, 
0x08, 0x07, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x07, 0x07, 0x07, 0x04, 0x06, 0x05, 0x04, 0x06, 
0x06, 0x04, 0x04, 0x05, 0x03, 0x06, 0x06, 0x06, 
0x06, 0x07, 0x07, 0x06, 0x03, 0x05, 0x04, 0x06, 
0x04, 0x06, 0x04, 0x04, 0x02, 0x04, 0x02, 0x01, 
0x01, 0x04, 0x05, 0x04, 0x05, 0x04, 0x04, 0x05, 
0x04, 0x01, 0x03, 0x04, 0x02, 0x05, 0x03, 0x05, 
0x04, 0x04, 0x02, 0x03, 0x04, 0x03, 0x02, 0x04, 
0x04, 0x05, 0x03, 0x05, 0x02, 0x05, 0x04, 0x00, 
0x00, 0x02, 0x03, 0x04, 0x07, 0x07, 0x05, 0x05, 
0x02, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x05, 0x02, 0x04, 0x06, 0x04, 0x08, 0x03, 0x04, 
0x05, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x00, 0x02, 0x02, 0x07, 0x08, 0x0a, 0x07, 0x01, 
0x02, 0x02, 0x08, 0x04, 0x01, 0x02, 0x01, 0x02, 
0x07, 0x03, 0x05, 0x05, 0x05, 0x05, 0x06, 0x03, 
0x08, 0x06, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x07, 0x05, 0x05, 0x04, 0x04, 0x07, 0x06, 0x04, 
0x03, 0x03, 0x05, 0x04, 0x03, 0x03, 0x03, 0x04, 
0x04, 0x05, 0x03, 0x05, 0x03, 0x06, 0x03, 0x05, 
0x03, 0x04, 0x04, 0x04, 0x02, 0x04, 0x02, 0x01, 
0x01, 0x05, 0x05, 0x04, 0x04, 0x07, 0x06, 0x04, 
0x03, 0x03, 0x05, 0x04, 0x03, 0x03, 0x03, 0x04, 
0x04, 0x05, 0x03, 0x05, 0x03, 0x06, 0x03, 0x05, 
0x03, 0x04, 0x04, 0x05, 0x02, 0x05, 0x04, 0x00, 
};


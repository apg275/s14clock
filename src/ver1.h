const uint8_t digit_map[]   = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,  };
const uint8_t digit_map_r[]   = { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1,  };

#define NUM_OF_DIGITS	12
const uint32_t segment_maskA = 0x0027e000;
const uint32_t segment_maskB = 0x000000fe;
const uint32_t all_maskA = 0x0027fffe;
const uint32_t all_maskB = 0x000000fe;
const uint32_t spin_maskA[] = {
0x00002000, 0x00006000, 0x0000e000, 0x0001e000, 
0x0003e000, 0x0007e000, 0x0027e000, 0x0027e000, 
0x0027e000, 0x0027e000, 0x0027e000, 0x0027e000, 
0x0027e000, 0x0027e000, 0x0027e000, };
const uint32_t spin_maskB[] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000002, 
0x00000006, 0x0000000e, 0x0000001e, 0x0000009e, 
0x000000de, 0x000000fe, 0x000000fe, };
const uint32_t asciiA[] = {
0x02238000, 0x02200000, 0x02210000, 0x02212000, 0x16246000, 0x4a21a000, 0xaa200000, 0x8a210000, 
0xa0000000, 0x8a208000, 0x40000000, 0x88000000, 0x30200000, 0x02210000, 0x86000000, 0x42006000, 
0x02246000, 0x48000000, 0x4800c000, 0x4806c000, 0xb4000000, 0x8601a000, 0x0a200000, 0x0a210000, 
0x0a212000, 0xb4002000, 0x40000000, 0x88000000, 0x30200000, 0x02210000, 0x86000000, 0x42006000, 
0x00000000, 0x0000c000, 0x08004000, 0x4a21c000, 0x4a25a000, 0xfe248000, 0x2c232000, 0x08000000, 
0x30000000, 0x84000000, 0xfe200000, 0x4a200000, 0x80000000, 0x02200000, 0x40000000, 0x90000000, 
0x9007e000, 0x1000c000, 0x02236000, 0x0201e000, 0x0224c000, 0x20252000, 0x0227a000, 0x0000e000, 
0x0227e000, 0x0225e000, 0x40000000, 0x88000000, 0x30200000, 0x02210000, 0x86000000, 0x42006000, 
0x0a076000, 0x0226e000, 0x4a01e000, 0x00072000, 0x4801e000, 0x00272000, 0x00262000, 0x0207a000, 
0x0226c000, 0x48012000, 0x0003c000, 0x30260000, 0x00070000, 0x1406c000, 0x2406c000, 0x0007e000, 
0x02266000, 0x2007e000, 0x22266000, 0x0225a000, 0x48002000, 0x0007c000, 0x90060000, 0xa006c000, 
0xb4000000, 0x0225c000, 0x90012000, 0x00072000, 0x24000000, 0x0001e000, 0xa0000000, 0x00010000, 
0x04000000, 0x40230000, 0x20270000, 0x02230000, 0x8201c000, 0x80230000, 0x52200000, 0x1201c000, 
0x40260000, 0x40000000, 0x88020000, 0x78000000, 0x00060000, 0x42228000, 0x40220000, 0x02238000, 
0x04260000, 0x1200c000, 0x00220000, 0x22010000, 0x00270000, 0x00038000, 0x80020000, 0xa0028000, 
0xb4000000, 0x0a01c000, 0x80210000, 0x84212000, 0x48000000, 0x32012000, 0x92200000, 0x00000000, 
0x00000000, 0x02200000, 0x02210000, 0x02212000, 0x16246000, 0x4a21a000, 0xaa200000, 0x92210000, 
0xa0000000, 0x8a208000, 0x40000000, 0x88000000, 0x30200000, 0x02210000, 0x86000000, 0x42006000, 
0x02238000, 0x02200000, 0x20228000, 0x42228000, 0x08202000, 0x10244000, 0x42018000, 0x00042000, 
0x0a246000, 0x08242000, 0x40000000, 0x88000000, 0x30200000, 0x02210000, 0x86000000, 0x42006000, 
0x00000000, 0x0000c000, 0x08004000, 0x4a21c000, 0x4a25a000, 0xfe248000, 0x2c232000, 0x08000000, 
0x30000000, 0x84000000, 0xfe200000, 0x4a200000, 0x80000000, 0x02200000, 0x40000000, 0x90000000, 
0x0027e000, 0x48010000, 0x02216000, 0x0021e000, 0x0224c000, 0x0221a000, 0x0223a000, 0x0000e000, 
0x0227e000, 0x02256000, 0x48000000, 0x88000000, 0x30200000, 0x02210000, 0x86000000, 0x42006000, 
0x0a076000, 0x30260000, 0x02072000, 0x0804c000, 0x90202000, 0x9206c000, 0x58230000, 0x10242000, 
0x00212000, 0x1000c000, 0x1021c000, 0x02206000, 0x2000c000, 0x82010000, 0xa0020000, 0xa2010000, 
0x00238000, 0x00076000, 0x90002000, 0x2401c000, 0x1c000000, 0x1007c000, 0x54000000, 0x02246000, 
0xa0010000, 0x2c008000, 0x82018000, 0x00072000, 0x24000000, 0x0001e000, 0xa0000000, 0x00010000, 
0x04000000, 0x30260000, 0x02072000, 0x0804c000, 0x90202000, 0x9206c000, 0x58230000, 0x10242000, 
0x00212000, 0x1000c000, 0x1021c000, 0x02206000, 0x2000c000, 0x82010000, 0xa0020000, 0xa2010000, 
0x00238000, 0x00076000, 0x90002000, 0x2401c000, 0x1c000000, 0x1007c000, 0x54000000, 0x02246000, 
0xa0010000, 0x2c008000, 0x82018000, 0x84212000, 0x48000000, 0x32012000, 0x92200000, 0x00000000, 
};

const uint32_t asciiB[] = {
0x02246000, 0x02200000, 0x02202000, 0x02212000, 0xa2238000, 0x4a252000, 0x56200000, 0x52202000, 
0x14000000, 0x52240000, 0x08000000, 0x50000000, 0x86000000, 0x02202000, 0x30200000, 0x08230000, 
0x02238000, 0x48000000, 0x48060000, 0x4806c000, 0xb4000000, 0x30252000, 0x42200000, 0x42202000, 
0x42212000, 0xb4010000, 0x08000000, 0x50000000, 0x86000000, 0x02202000, 0x30200000, 0x08230000, 
0x00000000, 0x00060000, 0x40020000, 0x4a262000, 0x4a25a000, 0xfe248000, 0x66016000, 0x40000000, 
0x84000000, 0x30000000, 0xfe200000, 0x4a200000, 0x10000000, 0x02200000, 0x08000000, 0x90000000, 
0x9007e000, 0x80060000, 0x02236000, 0x00272000, 0x02268000, 0x0601a000, 0x0225e000, 0x00070000, 
0x0227e000, 0x0227a000, 0x08000000, 0x50000000, 0x86000000, 0x02202000, 0x30200000, 0x08230000, 
0x4023e000, 0x0227c000, 0x48272000, 0x0001e000, 0x48072000, 0x0201e000, 0x0201c000, 0x0025e000, 
0x0226c000, 0x48012000, 0x00066000, 0x8600c000, 0x0000e000, 0xa006c000, 0x2406c000, 0x0007e000, 
0x0223c000, 0x0407e000, 0x0623c000, 0x0225a000, 0x48010000, 0x0006e000, 0x9000c000, 0x1406c000, 
0xb4000000, 0x0226a000, 0x90012000, 0x0001e000, 0x24000000, 0x00072000, 0x14000000, 0x00002000, 
0x20000000, 0x0a006000, 0x0600e000, 0x02206000, 0x10262000, 0x12006000, 0x8a200000, 0x80262000, 
0x0a00c000, 0x08000000, 0x50004000, 0xcc000000, 0x0000c000, 0x0a244000, 0x0a004000, 0x02246000, 
0x2200c000, 0x80260000, 0x02004000, 0x04202000, 0x0200e000, 0x00046000, 0x10004000, 0x14044000, 
0xb4000000, 0x40262000, 0x12002000, 0x32012000, 0x48000000, 0x84212000, 0x92200000, 0x00000000, 
0x00000000, 0x02200000, 0x02202000, 0x02212000, 0xa2238000, 0x4a252000, 0x56200000, 0x92202000, 
0x14000000, 0x52240000, 0x08000000, 0x50000000, 0x86000000, 0x02202000, 0x30200000, 0x08230000, 
0x02246000, 0x02200000, 0x06044000, 0x0a244000, 0x42010000, 0x82028000, 0x08242000, 0x00018000, 
0x42238000, 0x42018000, 0x08000000, 0x50000000, 0x86000000, 0x02202000, 0x30200000, 0x08230000, 
0x00000000, 0x00060000, 0x40020000, 0x4a262000, 0x4a25a000, 0xfe248000, 0x66016000, 0x40000000, 
0x84000000, 0x30000000, 0xfe200000, 0x4a200000, 0x10000000, 0x02200000, 0x08000000, 0x90000000, 
0x0207e000, 0x48002000, 0x02232000, 0x02072000, 0x02268000, 0x02252000, 0x02256000, 0x00070000, 
0x0227e000, 0x0223a000, 0x48000000, 0x50000000, 0x86000000, 0x02202000, 0x30200000, 0x08230000, 
0x4023e000, 0x8600c000, 0x0021e000, 0x40068000, 0x92010000, 0x9026c000, 0xca006000, 0x82018000, 
0x02012000, 0x80060000, 0x82062000, 0x02230000, 0x04060000, 0x10202000, 0x14004000, 0x14202000, 
0x02046000, 0x0003e000, 0x90010000, 0x24062000, 0xe0000000, 0x8006e000, 0xa8000000, 0x02238000, 
0x14002000, 0x64040000, 0x10242000, 0x0001e000, 0x24000000, 0x00072000, 0x14000000, 0x00002000, 
0x20000000, 0x8600c000, 0x0021e000, 0x40068000, 0x92010000, 0x9026c000, 0xca006000, 0x82018000, 
0x02012000, 0x80060000, 0x82062000, 0x02230000, 0x04060000, 0x10202000, 0x14004000, 0x14202000, 
0x02046000, 0x0003e000, 0x90010000, 0x24062000, 0xe0000000, 0x8006e000, 0xa8000000, 0x02238000, 
0x14002000, 0x64040000, 0x10242000, 0x32012000, 0x48000000, 0x84212000, 0x92200000, 0x00000000, 
};

const uint8_t asciiOnOff[] = {
0x05, 0x02, 0x03, 0x04, 0x07, 0x07, 0x05, 0x05, 
0x02, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x05, 0x02, 0x04, 0x06, 0x04, 0x06, 0x03, 0x04, 
0x05, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x00, 0x02, 0x02, 0x07, 0x08, 0x0a, 0x07, 0x01, 
0x02, 0x02, 0x08, 0x04, 0x01, 0x02, 0x01, 0x02, 
0x08, 0x03, 0x06, 0x05, 0x05, 0x05, 0x07, 0x03, 
0x08, 0x07, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x07, 0x07, 0x07, 0x04, 0x06, 0x05, 0x04, 0x06, 
0x06, 0x04, 0x04, 0x05, 0x03, 0x06, 0x06, 0x06, 
0x06, 0x07, 0x07, 0x06, 0x03, 0x05, 0x04, 0x06, 
0x04, 0x06, 0x04, 0x04, 0x02, 0x04, 0x02, 0x01, 
0x01, 0x04, 0x05, 0x04, 0x05, 0x04, 0x04, 0x05, 
0x04, 0x01, 0x03, 0x04, 0x02, 0x05, 0x03, 0x05, 
0x04, 0x04, 0x02, 0x03, 0x04, 0x03, 0x02, 0x04, 
0x04, 0x05, 0x03, 0x05, 0x02, 0x05, 0x04, 0x00, 
0x00, 0x02, 0x03, 0x04, 0x07, 0x07, 0x05, 0x05, 
0x02, 0x05, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x05, 0x02, 0x04, 0x05, 0x03, 0x04, 0x04, 0x02, 
0x06, 0x04, 0x01, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x00, 0x02, 0x02, 0x07, 0x08, 0x0a, 0x07, 0x01, 
0x02, 0x02, 0x08, 0x04, 0x01, 0x02, 0x01, 0x02, 
0x07, 0x03, 0x05, 0x05, 0x05, 0x05, 0x06, 0x03, 
0x08, 0x06, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 
0x07, 0x05, 0x05, 0x04, 0x04, 0x07, 0x06, 0x04, 
0x03, 0x03, 0x05, 0x04, 0x03, 0x03, 0x03, 0x04, 
0x04, 0x05, 0x03, 0x05, 0x03, 0x06, 0x03, 0x05, 
0x03, 0x04, 0x04, 0x04, 0x02, 0x04, 0x02, 0x01, 
0x01, 0x05, 0x05, 0x04, 0x04, 0x07, 0x06, 0x04, 
0x03, 0x03, 0x05, 0x04, 0x03, 0x03, 0x03, 0x04, 
0x04, 0x05, 0x03, 0x05, 0x03, 0x06, 0x03, 0x05, 
0x03, 0x04, 0x04, 0x05, 0x02, 0x05, 0x04, 0x00, 
};

